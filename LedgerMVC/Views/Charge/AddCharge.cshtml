@model LedgerMVC.Models.ChargeItem
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="well">
    @using (Ajax.BeginForm("AddCharge",null, new AjaxOptions { UpdateTargetId = "ChargeList" }, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="form-group">
            <label for="ChargeType" class="col-sm-2 control-label">類別</label>
            <div class="col-sm-10">
                @Html.DropDownListFor(model => model.ChargeType,
                    new List<SelectListItem> {
                        new SelectListItem { Value = "0" , Text = "支出" },
                        new SelectListItem { Value = "1" , Text = "收入" },
                    },
                    new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label for="ChargePrice" class="col-sm-2 control-label">金額</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.ChargePrice, new { htmlAttributes = new { @class = "form-control", PlaceHolder = "金額" } })
                @Html.ValidationMessageFor(model => model.ChargePrice)
            </div>
        </div>
        <div class="form-group">
            <label for="ChargeDate" class="col-sm-2 control-label">日期</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.ChargeDate, new { htmlAttribute = new { @class = "form-control",@readonly = "readonly"}})
                @Html.ValidationMessageFor(model => model.ChargeDate)
            </div>
        </div>
        <div class="form-group">
            <label for="Memo" class="col-sm-2 control-label">備註</label>
            <div class="col-sm-10">
                @Html.TextAreaFor(model => model.Memo, new { htmlAttribute = new { @class = "form-conrtol", PlaceHolder = "備註" } })
                @Html.ValidationMessageFor(model => model.Memo)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-8 col-sm-4">
                <button type="submit" class="btn btn-default">送出</button>
            </div>
        </div>
    }
</div>

<hr/>
@Html.Action("ChargeMoney")
@section scripts{
    <script type="text/javascript">
        $(document).ready(function() {
            $('.page-link').click(function() {
                var currentPageIndex = $(this).text();
                reloadTable(currentPageIndex);
            });

            $('#ChargeDate').datepicker({
                showOtherMonths: true,
                hideIfNoPrevNext: true,
                maxDate: "+0d",
                dateFormat: "yy/mm/dd"
            });

            function reloadTable(pageIndex) {
                /*
                    用於日期轉換用，使用Json.net有格式轉換問題
                    http://blog.darkthread.net/blogs/darkthreadtw/archive/2013/11/15/10657.aspx#10727
                */
                months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];
                days = [
                    '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12',
                    '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24',
                    '25', '26', '27', '28', '29', '30', '31'
                ];
                $.ajax({
                    type: "GET",
                    url: './ShowPagedChargeRecords',
                    data: { currentPageIndex: pageIndex },
                    error: function(data) {
                        alert(data);
                    },
                    success: function(responseData) {
                        $('#ChargeList tbody').empty();
                        var tbodyElement = '';
                        var chargeList = responseData.ChargeItems;
                        var totalPages = responseData.TotalPages;

                        for (var i = 0; i < chargeList.length; i++) {
                            var date = new Date(parseInt(chargeList[i]["ChargeDate"].substr(6)));
                            tbodyElement += '<tr><td>' +
                                chargeList[i]["ChargeRecordId"] +
                                '</td>' +
                                '<td>' +
                                chargeList[i]["ChargeType"] +
                                '</td>' +
                                '<td>' +
                                date.getFullYear() +
                                "-" +
                                months[date.getMonth()] +
                                "-" +
                                days[date.getDay()] +
                                '</td>' +
                                '<td>NT$' +
                                (chargeList[i]["ChargePrice"]).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,') +
                                '</td>' +
                                '<td><textarea cols="50" rows="5">' +
                                chargeList[i]["Memo"] +
                                '</textarea></td></tr>';
                        }
                        $('#ChargeList tbody').append(tbodyElement);
                        reloadPagination(pageIndex, totalPages);
                    }
                });
            }

            function reloadPagination(pageIndex, totalPages) {
                $('#LedgerPagnation').empty();
                var htmlElement = '';
                for (var i = 1; i <= Number(totalPages); i++) {
                    if (i == Number(pageIndex)) {
                        htmlElement += '<li class="page-item active"><a class="page-link">' + i + '</a></li>';
                    } else {
                        htmlElement += '<li class="page-item"><a class="page-link">' + i + '</a></li>';
                    }
                }
                $('#LedgerPagnation').append(htmlElement);
                $('.page-link').click(function() {
                    var currentPageIndex = $(this).text();
                    reloadTable(currentPageIndex);
                });
            }
        });
    </script>
}
